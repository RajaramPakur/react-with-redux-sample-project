{"version":3,"sources":["action/newsFeedActions.js","views/Base/Dashboard/DashCard.js","views/Base/Dashboard/Dashboard.js","views/Base/Dashboard/CountryButtons.js","views/Base/Dashboard/MainDash.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchAllNews","fetchAllNewsSources","searchFromTopNews","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","country","dispatch","fetch","concat","then","res","json","news","type","TOP_NEWS","payload","sources","NEWS_SOURCES","query","SEARCH_NEWS","DashCard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","author","_this$props","props","card","flexType","react_default","a","createElement","className","src","urlToImage","alt","description","href","url","target","title","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","publishedAt","source","name","Component","Dashboard","cardListsTemp","count","position","articles","map","index","Dashboard_DashCard","state","ButtonCountry","countryName","countryCode","active","CountryButtons","button","sendCountryCode","e","preventDefault","filter","console","log","btn","onClick","bind","role","aria-label","MainDash","action","_this","route","_callee","regenerator_default","wrap","_context","prev","next","stop","Dashboard_CountryButtons","lib_default","date","ticking","react","fallback","connect"],"mappings":"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","file":"static/js/7.b68e7c00.chunk.js","sourcesContent":["import { TOP_NEWS, SEARCH_NEWS, NEWS_SOURCES, SEARCH_BY_SOURCES } from '../constants/actionTypes';\r\n\r\nexport const fetchAllNews = (country) => dispatch => {\r\n    fetch(`https://newsapi.org/v2/top-headlines?country=${country}&apiKey=c2f48bbd52284c618ba6f7866c3e550b`)\r\n        .then(res => res.json())\r\n        .then(news => dispatch({\r\n            type: TOP_NEWS,\r\n            payload: news,\r\n        }));\r\n};\r\n\r\nexport const fetchAllNewsSources = () => dispatch => {\r\n    fetch('https://newsapi.org/v2/sources?apiKey=c2f48bbd52284c618ba6f7866c3e550b')\r\n        .then(res => res.json())\r\n        .then(sources => dispatch({\r\n            type: NEWS_SOURCES,\r\n            payload: sources\r\n        }));\r\n};\r\n\r\nexport const searchFromTopNews = (query) => dispatch => {\r\n    fetch(`https://newsapi.org/v2/everything?q=${query}&apiKey=c2f48bbd52284c618ba6f7866c3e550b`)\r\n        .then(res => res.json())\r\n        .then(news => dispatch({\r\n            type: SEARCH_NEWS,\r\n            payload: news\r\n        }));\r\n};\r\n\r\nexport const searchAllNewsByDomain = (domains) => dispatch => {\r\n    fetch(`https://newsapi.org/v2/everything?domains=${domains}&apiKey=c2f48bbd52284c618ba6f7866c3e550b`)\r\n        .then(res => res.json())\r\n        .then(news => dispatch({\r\n            type: SEARCH_BY_SOURCES,\r\n            payload: news\r\n        }));\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class DashCard extends Component {\r\n    static propTypes = {\r\n        card: PropTypes.object,\r\n    }\r\n\r\n    render() {\r\n        const { card, flexType } = this.props;\r\n        var author;\r\n        if (card.author !== null) {\r\n            author = `By ${card.author}`;\r\n        } else {\r\n            author = '';\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-12 col-xl-6 no-padding\">\r\n                <div className={`blog-content flex ${flexType}`}>\r\n                    <figure>\r\n                        <img src={card.urlToImage} alt={card.description} />\r\n                    </figure>\r\n                    <div className=\"entry-content flex flex-column justify-content-between align-items-start\">\r\n                        <header>\r\n                            <h3><a href={card.url} target=\"_blank\">{card.title}</a></h3>\r\n                            <div className=\"posted-by\">{author}</div>\r\n                        </header>\r\n                        <footer className=\"flex flex-wrap align-items-center\">\r\n                            <div className=\"posted-on\">\r\n                                {new Intl.DateTimeFormat('en-GB', {\r\n                                    year: 'numeric',\r\n                                    month: 'long',\r\n                                    day: '2-digit', hour: '2-digit', minute: '2-digit'\r\n                                }).format(new Date(card.publishedAt))}\r\n                            </div>\r\n                            <ul className=\"flex flex-wrap align-items-center\">\r\n                                <li><a href=\"#\">{card.source.name}</a></li>\r\n                            </ul>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashCard\r\n","import React, { Component } from 'react';\r\n\r\nimport DashCard from './DashCard';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    render() {\r\n        let cardListsTemp;\r\n        var count = 0, position = 0;\r\n        var flexType = '';\r\n        if (this.props.news.articles) {\r\n            cardListsTemp = this.props.news.articles.map((card, index) => {\r\n                if (count > 1) {\r\n                    count = 0;\r\n                    position++;\r\n                }\r\n                if ((position % 2) !== 0) {\r\n                    flexType = \"flex-row-reverse\"\r\n                } else {\r\n                    flexType = \"\";\r\n                }\r\n                count++;\r\n                return (\r\n                    <DashCard card={card} key={index} flexType={flexType} />\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                {cardListsTemp}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    news: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default (Dashboard);\r\n","import React from 'react';\r\n\r\nconst state = {\r\n    ButtonCountry: [\r\n        {\r\n            countryName: 'United States',\r\n            countryCode: 'US',\r\n            active: 'btn-primary',\r\n        }, {\r\n            countryName: 'Australia',\r\n            countryCode: 'AU',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'China',\r\n            countryCode: 'CN',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'India',\r\n            countryCode: 'IN',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'Japan',\r\n            countryCode: 'JP',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'Russia',\r\n            countryCode: 'RU',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'South Korea',\r\n            countryCode: 'KR',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'United Kingdom',\r\n            countryCode: 'GB',\r\n            active: 'btn-secondary',\r\n        }, {\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            active: 'btn-secondary',\r\n        }\r\n    ]\r\n}\r\n\r\nconst CountryButtons = (props) => {\r\n    const sendCountryCode = (e) => {\r\n        e.preventDefault();\r\n        props.countryCode(e.target);\r\n        state.ButtonCountry.filter((country) => {\r\n            console.log(country + \" \" + e.target.value);\r\n            if (country.countryCode === e.target.value) {\r\n                country.active = 'btn-primary';\r\n                return country;\r\n            } else {\r\n                country.active = 'btn-secondary'\r\n                return country;\r\n            }\r\n        });\r\n    };\r\n\r\n    let button;\r\n    button = state.ButtonCountry.map((btn, index) => {\r\n        return (<button key={index} type=\"button\" className={`btn ${btn.active}`} onClick={sendCountryCode.bind(this)} value={btn.countryCode}>{btn.countryName}</button>);\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            {button}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryButtons\r\n","import React, { Component, Suspense } from 'react';\r\nimport CountryButtons from './CountryButtons';\r\nimport PropTypes from 'prop-types';\r\nimport Clock from 'react-live-clock';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllNews } from '../../../action/newsFeedActions';\r\nimport { Dashboard } from './Dashboard';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\nclass MainDash extends Component {\r\n\r\n    state = {\r\n        action: {\r\n            name: this.props.route.name,\r\n            countryCode: 'US',\r\n        }\r\n    }\r\n    sendCountryCode = async (e) => {\r\n        this.props.fetchAllNews(e.value);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllNews(this.state.action.countryCode);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"outer-container blog-page\">\r\n                <div className=\"container-fluid\">\r\n                    <br />\r\n                    <CountryButtons countryCode={this.sendCountryCode.bind(this)} />\r\n                    <div className=\"float-right\">\r\n                        <Clock\r\n                            date={new Date()}\r\n                            format={'dddd, MMMM Mo, YYYY, h:mm:ss A'}\r\n                            ticking={true}\r\n                        />\r\n                    </div>\r\n                    <hr />\r\n                    <h3>{this.state.action.name}</h3>\r\n                    <Suspense fallback={loading()}>\r\n                        <Dashboard news={this.props.news} />\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMainDash.propTypes = {\r\n    fetchAllNews: PropTypes.func.isRequired,\r\n    news: PropTypes.object.isRequired,\r\n    route: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    news: state.news.news,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchAllNews })(MainDash);\r\n"],"sourceRoot":""}