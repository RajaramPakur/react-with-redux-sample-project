{"version":3,"sources":["action/newsFeedActions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/Base/Dashboard/DashCard.js","views/Base/Dashboard/Dashboard.js","views/Base/SearchField/XlSearchField.js","views/Base/Filter/Filter.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchAllNews","fetchAllNewsSources","searchFromTopNews","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","country","dispatch","fetch","concat","then","res","json","news","type","TOP_NEWS","payload","sources","NEWS_SOURCES","query","SEARCH_NEWS","module","exports","g","this","self","Function","hadRuntime","regeneratorRuntime","Object","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","DashCard","_Component","classCallCheck","possibleConstructorReturn","inherits","createClass","author","_this$props","props","card","flexType","react_default","a","createElement","className","src","urlToImage","alt","description","href","url","target","title","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","publishedAt","source","Component","Dashboard","cardListsTemp","count","position","articles","map","index","Dashboard_DashCard","XlSearchField","_getPrototypeOf2","_this","_len","Array","_key","handleSearch","preventDefault","console","log","refs","search","loadResult","onSubmit","bind","ref","placeholder","Filter","action","route","countryCode","getSearchResult","_callee","regenerator_default","_context","SearchField_XlSearchField","react","fallback","connect"],"mappings":"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","file":"static/js/5.a175fcfc.chunk.js","sourcesContent":["import {\n  TOP_NEWS,\n  SEARCH_NEWS,\n  NEWS_SOURCES,\n  SEARCH_BY_SOURCES,\n} from \"../constants/actionTypes\";\n\nexport const fetchAllNews = (country) => (dispatch) => {\n  fetch(\n    `https://newsapi.org/v2/top-headlines?country=${country}&apiKey=a78e73c6432c44a395e6f4c7771ab6f3`\n  )\n    .then((res) => res.json())\n    .then((news) =>\n      dispatch({\n        type: TOP_NEWS,\n        payload: news,\n      })\n    );\n};\n\nexport const fetchAllNewsSources = () => (dispatch) => {\n  fetch(\n    \"https://newsapi.org/v2/sources?apiKey=a78e73c6432c44a395e6f4c7771ab6f3\"\n  )\n    .then((res) => res.json())\n    .then((sources) =>\n      dispatch({\n        type: NEWS_SOURCES,\n        payload: sources,\n      })\n    );\n};\n\nexport const searchFromTopNews = (query) => (dispatch) => {\n  fetch(\n    `https://newsapi.org/v2/everything?q=${query}&apiKey=a78e73c6432c44a395e6f4c7771ab6f3`\n  )\n    .then((res) => res.json())\n    .then((news) =>\n      dispatch({\n        type: SEARCH_NEWS,\n        payload: news,\n      })\n    );\n};\n\nexport const searchAllNewsByDomain = (domains) => (dispatch) => {\n  fetch(\n    `https://newsapi.org/v2/everything?domains=${domains}&apiKey=a78e73c6432c44a395e6f4c7771ab6f3`\n  )\n    .then((res) => res.json())\n    .then((news) =>\n      dispatch({\n        type: SEARCH_BY_SOURCES,\n        payload: news,\n      })\n    );\n};\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class DashCard extends Component {\n    static propTypes = {\n        card: PropTypes.object,\n    }\n\n    render() {\n        const { card, flexType } = this.props;\n        var author;\n        if (card.author !== null) {\n            author = `By ${card.author}`;\n        } else {\n            author = '';\n        }\n\n        return (\n            <div className=\"col-12 col-xl-6 no-padding\">\n                <div className={`blog-content flex ${flexType}`}>\n                    <figure>\n                        <img src={card.urlToImage} alt={card.description} />\n                    </figure>\n                    <div className=\"entry-content flex flex-column justify-content-between align-items-start\">\n                        <header>\n                            <h3><a href={card.url} target=\"_blank\">{card.title}</a></h3>\n                            <div className=\"posted-by\">{author}</div>\n                        </header>\n                        <footer className=\"flex flex-wrap align-items-center\">\n                            <div className=\"posted-on\">\n                                {new Intl.DateTimeFormat('en-GB', {\n                                    year: 'numeric',\n                                    month: 'long',\n                                    day: '2-digit', hour: '2-digit', minute: '2-digit'\n                                }).format(new Date(card.publishedAt))}\n                            </div>\n                            <ul className=\"flex flex-wrap align-items-center\">\n                                <li><a href=\"#\">{card.source.name}</a></li>\n                            </ul>\n                        </footer>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DashCard\n","import React, { Component } from 'react';\n\nimport DashCard from './DashCard';\nimport PropTypes from 'prop-types';\n\nexport class Dashboard extends Component {\n\n    render() {\n        let cardListsTemp;\n        var count = 0, position = 0;\n        var flexType = '';\n        if (this.props.news.articles) {\n            cardListsTemp = this.props.news.articles.map((card, index) => {\n                if (count > 1) {\n                    count = 0;\n                    position++;\n                }\n                if ((position % 2) !== 0) {\n                    flexType = \"flex-row-reverse\"\n                } else {\n                    flexType = \"\";\n                }\n                count++;\n                return (\n                    <DashCard card={card} key={index} flexType={flexType} />\n                );\n            });\n        }\n\n        return (\n            <div className=\"row\">\n                {cardListsTemp}\n            </div>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    news: PropTypes.object.isRequired,\n}\n\nexport default (Dashboard);\n","import React, { Component } from 'react'\n\nexport class XlSearchField extends Component {\n\n    handleSearch = (e) => {\n        e.preventDefault();\n        console.log(this.refs.search.value);\n        this.props.loadResult(this.refs.search.value);\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-12 col-lg-12 s01\">\n                    <form onSubmit={this.handleSearch.bind(this)}>\n                        <div className=\"inner-form\">\n                            <div className=\"input-field first-wrap\">\n                                <input ref=\"search\" type=\"text\" placeholder=\"What are you looking for?\" />\n                            </div>\n                            <div className=\"input-field third-wrap\">\n                                <button className=\"btn-search\" type=\"submit\">Search</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default XlSearchField\n\n","import React, { Component, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchAllNews, searchFromTopNews } from '../../../action/newsFeedActions';\nimport { Dashboard } from '../Dashboard/Dashboard';\nimport XlSearchField from '../SearchField/XlSearchField';\n\nconst loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\nclass Filter extends Component {\n\n    state = {\n        action: {\n            name: this.props.route.name,\n            countryCode: 'US',\n        }\n    }\n\n    getSearchResult = async (query) => {\n        if (query === '') {\n            this.props.fetchAllNews(this.state.action.countryCode);\n        } else {\n            this.props.searchFromTopNews(query);\n        }\n    };\n    componentDidMount() {\n        this.props.fetchAllNews(this.state.action.countryCode);\n    }\n\n    render() {\n        return (\n            <div>\n                <XlSearchField loadResult={this.getSearchResult.bind(this)} />\n                <div className=\"outer-container blog-page\">\n                    <div className=\"container-fluid\">\n                        <h3>{this.state.action.name}</h3>\n                        <Suspense fallback={loading()}>\n                            <Dashboard news={this.props.news} />\n                        </Suspense>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nFilter.propTypes = {\n    fetchAllNews: PropTypes.func.isRequired,\n    searchFromTopNews: PropTypes.func,\n    news: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    news: state.news.news,\n});\n\nexport default connect(mapStateToProps, { fetchAllNews, searchFromTopNews })(Filter);\n"],"sourceRoot":""}